-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui") -- ✅ use CoreGui so UI stays after death
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "XlicWareUI"
ScreenGui.ResetOnSpawn = false -- ✅ keeps UI alive after respawn
ScreenGui.Parent = CoreGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0,360,0,260) -- reduced height to remove empty space
MainFrame.Position = UDim2.new(0.5, -180, 0.5, -130)
MainFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
MainFrame.BackgroundTransparency = 0.5
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.AnchorPoint = Vector2.new(0.5,0.5)
MainFrame.Parent = ScreenGui

-- Draggable UI
MainFrame.Active = true
MainFrame.Draggable = true

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0,12)
MainCorner.Parent = MainFrame

-- Outline
local Outline = Instance.new("UIStroke")
Outline.Parent = MainFrame
Outline.Thickness = 4
Outline.LineJoinMode = Enum.LineJoinMode.Round
Outline.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Outline.Color = Color3.fromRGB(255,255,255)

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1,0,0,40)
Title.Position = UDim2.new(0,0,0,0)
Title.BackgroundTransparency = 1
Title.Text = "XlicWare"
Title.Font = Enum.Font.GothamBold
Title.TextScaled = true
Title.TextColor3 = Color3.fromRGB(255,255,255)
Title.Parent = MainFrame

-- Button / Box creator
local function createButton(text, pos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,160,0,40)
    btn.Position = pos
    btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextScaled = true
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Parent = MainFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,10)
    corner.Parent = btn
    return btn
end

local function createBox(pos, placeholder)
    local box = Instance.new("TextBox")
    box.Size = UDim2.new(0,160,0,40)
    box.Position = pos
    box.BackgroundColor3 = Color3.fromRGB(40,40,40)
    box.Text = ""
    box.PlaceholderText = placeholder
    box.Font = Enum.Font.Gotham
    box.TextScaled = true
    box.TextColor3 = Color3.fromRGB(255,255,255)
    box.Parent = MainFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,10)
    corner.Parent = box
    return box
end

-- Buttons & Textboxes
local bringAllBtn = createButton("Bring All", UDim2.new(0,10,0,50))
local bringSelectedBtn = createButton("Bring Selected", UDim2.new(0,190,0,50))
local walkSpeedBtn = createButton("WalkSpeed On", UDim2.new(0,10,0,100))
local aimbotBtn = createButton("Aimbot Off", UDim2.new(0,190,0,100))
local targetBox = createBox(UDim2.new(0,190,0,150),"Enter Display Name")
local speedBox = createBox(UDim2.new(0,10,0,150),"Type Speed Here")

-- WalkSpeed
local walkSpeedEnabled = false
local HumanModCons = {}

local function SetWalkSpeed(speed)
    local Char = LocalPlayer.Character
    if not Char then return end
    local Human = Char:FindFirstChildWhichIsA("Humanoid")
    if not Human then return end
    local function WalkSpeedChange()
        if Char and Human then
            Human.WalkSpeed = speed
        end
    end
    WalkSpeedChange()
    if HumanModCons.wsLoop then HumanModCons.wsLoop:Disconnect() end
    HumanModCons.wsLoop = Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
    if HumanModCons.wsCA then HumanModCons.wsCA:Disconnect() end
    HumanModCons.wsCA = LocalPlayer.CharacterAdded:Connect(function(newChar)
        Char = newChar
        Human = newChar:WaitForChild("Humanoid")
        if walkSpeedEnabled then
            WalkSpeedChange()
            HumanModCons.wsLoop = Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
        else
            Human.WalkSpeed = 16 -- ✅ reset back to default if disabled
        end
    end)
end

walkSpeedBtn.MouseButton1Click:Connect(function()
    walkSpeedEnabled = not walkSpeedEnabled
    walkSpeedBtn.Text = walkSpeedEnabled and "WalkSpeed On" or "WalkSpeed Off"
    local speed = tonumber(speedBox.Text) or 16
    if walkSpeedEnabled then
        SetWalkSpeed(speed)
    else
        if HumanModCons.wsLoop then HumanModCons.wsLoop:Disconnect() HumanModCons.wsLoop = nil end
        if HumanModCons.wsCA then HumanModCons.wsCA:Disconnect() HumanModCons.wsCA = nil end
        local char = LocalPlayer.Character
        if char then
            local hum = char:FindFirstChildWhichIsA("Humanoid")
            if hum then hum.WalkSpeed = 16 end
        end
    end
end)

-- Bring All
local bringAllActive = false
bringAllBtn.MouseButton1Click:Connect(function()
    bringAllActive = not bringAllActive
    bringAllBtn.Text = bringAllActive and "Unbring All" or "Bring All"
end)

-- Bring Selected
local bringSelectedActive = false
bringSelectedBtn.MouseButton1Click:Connect(function()
    bringSelectedActive = not bringSelectedActive
    bringSelectedBtn.Text = bringSelectedActive and "Unbring Selected" or "Bring Selected"
end)

-- Aimbot
local aimbotEnabled = false
local aimbotKey = Enum.KeyCode.C
local aimbotTarget = nil -- store locked target

aimbotBtn.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    if not aimbotEnabled then
        aimbotTarget = nil -- unlock when disabled
    end
    aimbotBtn.Text = aimbotEnabled and "Aimbot On" or "Aimbot Off"
end)

-- Aimbot key changer
targetBox.FocusLost:Connect(function(enter)
    local text = targetBox.Text:upper()
    local suc, key = pcall(function() return Enum.KeyCode[text] end)
    if suc and key then
        aimbotKey = key
    end
end)

-- Loop Actions
RunService.RenderStepped:Connect(function()
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char.HumanoidRootPart
    local offset = CFrame.new(0,0,3)

    -- Bring All Loop
    if bringAllActive then
        for _,p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local targetHRP = p.Character.HumanoidRootPart
                targetHRP.CFrame = hrp.CFrame * offset
                for _,part in pairs(p.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end
    end

    -- Bring Selected Loop
    if bringSelectedActive then
        local targetName = targetBox.Text:lower()
        for _,p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                if string.sub(p.Name:lower(),1,#targetName) == targetName then
                    local targetHRP = p.Character.HumanoidRootPart
                    targetHRP.CFrame = hrp.CFrame * offset
                    for _,part in pairs(p.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end
        end
    end

    -- Aimbot
    if aimbotEnabled then
        if not aimbotTarget or not aimbotTarget.Character or not aimbotTarget.Character:FindFirstChild("Head") then
            -- find closest target if none locked
            local closest = nil
            local shortest = math.huge
            for _,p in pairs(Players:GetPlayers()) do
                if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Head") then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(p.Character.Head.Position)
                    if onScreen then
                        local dist = (Vector2.new(screenPos.X,screenPos.Y)-Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2)).Magnitude
                        if dist < shortest then
                            shortest = dist
                            closest = p
                        end
                    end
                end
            end
            aimbotTarget = closest
        end

        -- Lock on target
        if aimbotTarget and aimbotTarget.Character and aimbotTarget.Character:FindFirstChild("Head") then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimbotTarget.Character.Head.Position)
        end
    end
end)

-- UI Toggle & Key Input
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.L then
        ScreenGui.Enabled = not ScreenGui.Enabled
    elseif input.KeyCode == aimbotKey then
        aimbotEnabled = not aimbotEnabled
        if not aimbotEnabled then aimbotTarget = nil end
        aimbotBtn.Text = aimbotEnabled and "Aimbot On" or "Aimbot Off"
    end
end)

function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9); function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = "\108\111\99\97\108\32\82\117\110\83\101\114\118\105\99\101\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\82\117\110\83\101\114\118\105\99\101\34\41\32\108\111\99\97\108\32\80\108\97\121\101\114\115\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\80\108\97\121\101\114\115\34\41\32\108\111\99\97\108\32\85\73\83\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\85\115\101\114\73\110\112\117\116\83\101\114\118\105\99\101\34\41\32\108\111\99\97\108\32\108\111\99\97\108\80\108\97\121\101\114\32\61\32\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\32\108\111\99\97\108\32\102\105\114\105\110\103\32\61\32\102\97\108\115\101\32\108\111\99\97\108\32\102\105\114\101\67\111\110\110\101\99\116\105\111\110\32\108\111\99\97\108\32\119\101\97\112\111\110\83\116\97\116\67\111\110\110\101\99\116\105\111\110\115\32\61\32\123\125\32\108\111\99\97\108\32\87\69\65\80\79\78\95\76\73\83\84\32\61\32\123\32\34\91\68\111\117\98\108\101\45\66\97\114\114\101\108\32\83\71\93\34\44\32\34\91\82\101\118\111\108\118\101\114\93\34\44\32\34\91\84\97\99\116\105\99\97\108\83\104\111\116\103\117\110\93\34\32\125\32\108\111\99\97\108\32\71\85\78\95\67\79\77\80\79\78\69\78\84\83\32\61\32\123\32\34\71\117\110\83\99\114\105\112\116\34\44\32\34\71\117\110\67\108\105\101\110\116\83\104\111\116\103\117\110\34\44\32\34\71\117\110\67\108\105\101\110\116\34\32\125\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\109\97\105\110\116\97\105\110\87\101\97\112\111\110\83\116\97\116\115\40\119\101\97\112\111\110\41\32\105\102\32\119\101\97\112\111\110\83\116\97\116\67\111\110\110\101\99\116\105\111\110\115\91\119\101\97\112\111\110\93\32\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\32\108\111\99\97\108\32\99\111\110\110\32\99\111\110\110\32\61\32\82\117\110\83\101\114\118\105\99\101\46\72\101\97\114\116\98\101\97\116\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\41\32\105\102\32\119\101\97\112\111\110\32\97\110\100\32\119\101\97\112\111\110\46\80\97\114\101\110\116\32\116\104\101\110\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\40\41\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\65\109\109\111\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\65\109\109\111\46\86\97\108\117\101\32\61\32\50\32\101\110\100\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\77\97\120\65\109\109\111\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\77\97\120\65\109\109\111\46\86\97\108\117\101\32\61\32\50\32\101\110\100\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\82\97\110\103\101\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\82\97\110\103\101\46\86\97\108\117\101\32\61\32\57\57\57\57\57\57\57\57\57\57\57\57\32\101\110\100\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\104\111\111\116\105\110\103\67\111\111\108\100\111\119\110\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\83\104\111\111\116\105\110\103\67\111\111\108\100\111\119\110\46\86\97\108\117\101\32\61\32\45\57\57\57\57\57\57\57\57\32\101\110\100\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\116\111\114\101\100\65\109\109\111\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\83\116\111\114\101\100\65\109\109\111\46\86\97\108\117\101\32\61\32\57\57\57\32\101\110\100\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\82\101\108\111\97\100\84\105\109\101\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\82\101\108\111\97\100\84\105\109\101\46\86\97\108\117\101\32\61\32\48\32\101\110\100\32\101\110\100\41\32\101\108\115\101\32\105\102\32\99\111\110\110\32\116\104\101\110\32\99\111\110\110\58\68\105\115\99\111\110\110\101\99\116\40\41\32\101\110\100\32\119\101\97\112\111\110\83\116\97\116\67\111\110\110\101\99\116\105\111\110\115\91\119\101\97\112\111\110\93\32\61\32\110\105\108\32\101\110\100\32\101\110\100\41\32\119\101\97\112\111\110\83\116\97\116\67\111\110\110\101\99\116\105\111\110\115\91\119\101\97\112\111\110\93\32\61\32\99\111\110\110\32\101\110\100\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\116\111\103\103\108\101\71\117\110\67\111\109\112\111\110\101\110\116\115\40\119\101\97\112\111\110\44\32\101\110\97\98\108\101\100\41\32\102\111\114\32\95\44\32\99\111\109\112\78\97\109\101\32\105\110\32\105\112\97\105\114\115\40\71\85\78\95\67\79\77\80\79\78\69\78\84\83\41\32\100\111\32\108\111\99\97\108\32\99\111\109\112\32\61\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\99\111\109\112\78\97\109\101\41\32\105\102\32\99\111\109\112\32\116\104\101\110\32\99\111\109\112\46\69\110\97\98\108\101\100\32\61\32\101\110\97\98\108\101\100\32\101\110\100\32\101\110\100\32\101\110\100\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\99\111\110\110\101\99\116\87\101\97\112\111\110\69\118\101\110\116\115\40\119\101\97\112\111\110\41\32\105\102\32\119\101\97\112\111\110\58\73\115\65\40\34\84\111\111\108\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\69\113\117\105\112\112\101\100\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\41\32\116\111\103\103\108\101\71\117\110\67\111\109\112\111\110\101\110\116\115\40\119\101\97\112\111\110\44\32\116\114\117\101\41\32\101\110\100\41\32\119\101\97\112\111\110\46\85\110\101\113\117\105\112\112\101\100\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\41\32\116\111\103\103\108\101\71\117\110\67\111\109\112\111\110\101\110\116\115\40\119\101\97\112\111\110\44\32\102\97\108\115\101\41\32\101\110\100\41\32\101\110\100\32\101\110\100\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\116\114\97\99\107\87\101\97\112\111\110\115\40\99\111\110\116\97\105\110\101\114\41\32\99\111\110\116\97\105\110\101\114\46\67\104\105\108\100\65\100\100\101\100\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\99\104\105\108\100\41\32\105\102\32\116\97\98\108\101\46\102\105\110\100\40\87\69\65\80\79\78\95\76\73\83\84\44\32\99\104\105\108\100\46\78\97\109\101\41\32\116\104\101\110\32\109\97\105\110\116\97\105\110\87\101\97\112\111\110\83\116\97\116\115\40\99\104\105\108\100\41\32\99\111\110\110\101\99\116\87\101\97\112\111\110\69\118\101\110\116\115\40\99\104\105\108\100\41\32\116\111\103\103\108\101\71\117\110\67\111\109\112\111\110\101\110\116\115\40\99\104\105\108\100\44\32\99\111\110\116\97\105\110\101\114\32\61\61\32\108\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\41\32\101\110\100\32\101\110\100\41\32\102\111\114\32\95\44\32\99\104\105\108\100\32\105\110\32\105\112\97\105\114\115\40\99\111\110\116\97\105\110\101\114\58\71\101\116\67\104\105\108\100\114\101\110\40\41\41\32\100\111\32\105\102\32\116\97\98\108\101\46\102\105\110\100\40\87\69\65\80\79\78\95\76\73\83\84\44\32\99\104\105\108\100\46\78\97\109\101\41\32\116\104\101\110\32\109\97\105\110\116\97\105\110\87\101\97\112\111\110\83\116\97\116\115\40\99\104\105\108\100\41\32\99\111\110\110\101\99\116\87\101\97\112\111\110\69\118\101\110\116\115\40\99\104\105\108\100\41\32\116\111\103\103\108\101\71\117\110\67\111\109\112\111\110\101\110\116\115\40\99\104\105\108\100\44\32\99\111\110\116\97\105\110\101\114\32\61\61\32\108\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\41\32\101\110\100\32\101\110\100\32\101\110\100\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\115\116\97\114\116\70\105\114\105\110\103\40\41\32\105\102\32\102\105\114\101\67\111\110\110\101\99\116\105\111\110\32\116\104\101\110\32\102\105\114\101\67\111\110\110\101\99\116\105\111\110\58\68\105\115\99\111\110\110\101\99\116\40\41\32\101\110\100\32\102\105\114\101\67\111\110\110\101\99\116\105\111\110\32\61\32\82\117\110\83\101\114\118\105\99\101\46\72\101\97\114\116\98\101\97\116\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\41\32\105\102\32\102\105\114\105\110\103\32\116\104\101\110\32\102\111\114\32\119\101\97\112\111\110\44\32\95\32\105\110\32\112\97\105\114\115\40\119\101\97\112\111\110\83\116\97\116\67\111\110\110\101\99\116\105\111\110\115\41\32\100\111\32\102\111\114\32\95\44\32\118\32\105\110\32\105\112\97\105\114\115\40\119\101\97\112\111\110\58\71\101\116\68\101\115\99\101\110\100\97\110\116\115\40\41\41\32\100\111\32\105\102\32\118\58\73\115\65\40\34\82\101\109\111\116\101\69\118\101\110\116\34\41\32\116\104\101\110\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\40\41\32\118\58\70\105\114\101\83\101\114\118\101\114\40\41\32\101\110\100\41\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\40\41\32\118\58\70\105\114\101\83\101\114\118\101\114\40\108\111\99\97\108\80\108\97\121\101\114\58\71\101\116\77\111\117\115\101\40\41\46\72\105\116\46\80\111\115\105\116\105\111\110\41\32\101\110\100\41\32\101\110\100\32\101\110\100\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\40\41\32\119\101\97\112\111\110\58\65\99\116\105\118\97\116\101\40\41\32\101\110\100\41\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\40\41\32\105\102\32\119\101\97\112\111\110\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\104\111\111\116\105\110\103\67\111\111\108\100\111\119\110\34\41\32\116\104\101\110\32\119\101\97\112\111\110\46\83\104\111\111\116\105\110\103\67\111\111\108\100\111\119\110\46\86\97\108\117\101\32\61\32\45\57\57\57\57\57\57\57\57\32\101\110\100\32\101\110\100\41\32\101\110\100\32\101\110\100\32\101\110\100\41\32\101\110\100\32\85\73\83\46\73\110\112\117\116\66\101\103\97\110\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\105\110\112\117\116\41\32\105\102\32\105\110\112\117\116\46\85\115\101\114\73\110\112\117\116\84\121\112\101\32\61\61\32\69\110\117\109\46\85\115\101\114\73\110\112\117\116\84\121\112\101\46\77\111\117\115\101\66\117\116\116\111\110\49\32\116\104\101\110\32\102\105\114\105\110\103\32\61\32\116\114\117\101\32\115\116\97\114\116\70\105\114\105\110\103\40\41\32\101\110\100\32\101\110\100\41\32\85\73\83\46\73\110\112\117\116\69\110\100\101\100\58\67\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\105\110\112\117\116\41\32\105\102\32\105\110\112\117\116\46\85\115\101\114\73\110\112\117\116\84\121\112\101\32\61\61\32\69\110\117\109\46\85\115\101\114\73\110\112\117\116\84\121\112\101\46\77\111\117\115\101\66\117\116\116\111\110\49\32\116\104\101\110\32\102\105\114\105\110\103\32\61\32\102\97\108\115\101\32\101\110\100\32\101\110\100\41\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\115\101\116\117\112\82\101\115\112\97\119\110\84\114\97\99\107\105\110\103\40\41\32\108\111\99\97\108\32\102\117\110\99\116\105\111\110\32\111\110\67\104\97\114\97\99\116\101\114\65\100\100\101\100\40\99\104\97\114\41\32\99\104\97\114\58\87\97\105\116\70\111\114\67\104\105\108\100\40\34\72\117\109\97\110\111\105\100\34\41\32\116\114\97\99\107\87\101\97\112\111\110\115\40\99\104\97\114\41\32\101\110\100\32\108\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\65\100\100\101\100\58\67\111\110\110\101\99\116\40\111\110\67\104\97\114\97\99\116\101\114\65\100\100\101\100\41\32\105\102\32\108\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\32\116\104\101\110\32\111\110\67\104\97\114\97\99\116\101\114\65\100\100\101\100\40\108\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\41\32\101\110\100\32\108\111\99\97\108\32\98\97\99\107\112\97\99\107\32\61\32\108\111\99\97\108\80\108\97\121\101\114\58\87\97\105\116\70\111\114\67\104\105\108\100\40\34\66\97\99\107\112\97\99\107\34\41\32\116\114\97\99\107\87\101\97\112\111\110\115\40\98\97\99\107\112\97\99\107\41\32\101\110\100\32\115\101\116\117\112\82\101\115\112\97\119\110\84\114\97\99\107\105\110\103\40\41\32"IllIIllIIllIII(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII)()
